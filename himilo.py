import plotly.graph_objects as go

fig = go.Figure()
import pandas as pd

import dash
import plotly.express as px
import pandas as pd
from dash import Input, Output, html, dcc
import dash_bootstrap_components as dbc

app = dash.Dash(external_stylesheets=[dbc.themes.QUARTZ])
title = html.H1("Strategic Planning Presentation", style={'textAlign': 'center'})
Survey = pd.read_csv('Survey.csv')
Adaptability = pd.DataFrame(Survey['Adaptability'].value_counts(normalize=True) * 100).reset_index()
No_pressure = pd.DataFrame(Survey['No_pressure'].value_counts(normalize=True) * 100).reset_index()
Awareness = pd.DataFrame(Survey['Awareness'].value_counts(normalize=True) * 100).reset_index()
Influence = pd.DataFrame(Survey['Influence'].value_counts(normalize=True) * 100).reset_index()
Importance = pd.DataFrame(Survey['Importance'].value_counts(normalize=True) * 100).reset_index()
DefinedGoals = pd.DataFrame(Survey['DefinedGoals'].value_counts(normalize=True) * 100).reset_index()
ReachGoal = pd.DataFrame(Survey['ReachGoal'].value_counts(normalize=True) * 100).reset_index()
Rewards = pd.DataFrame(Survey['Rewards'].value_counts(normalize=True) * 100).reset_index()
ParticiptionGoals = pd.DataFrame(Survey['ParticiptionGoals'].value_counts(normalize=True) * 100).reset_index()
Improvement = pd.DataFrame(Survey['Improvement'].value_counts(normalize=True) * 100).reset_index()
HarmonyGoals = pd.DataFrame(Survey['HarmonyGoals'].value_counts(normalize=True) * 100).reset_index()
CustomerValue = pd.DataFrame(Survey['CustomerValue'].value_counts(normalize=True) * 100).reset_index()
PolicyLeads = pd.DataFrame(Survey['PolicyLeads'].value_counts(normalize=True) * 100).reset_index()
CustomerRetension = pd.DataFrame(Survey['CustomerRetension'].value_counts(normalize=True) * 100).reset_index()
CustomerExperience = pd.DataFrame(Survey['CustomerExperience'].value_counts(normalize=True) * 100).reset_index()
ExcellentReward = pd.DataFrame(Survey['ExcellentReward'].value_counts(normalize=True) * 100).reset_index()
Satisfaction = pd.DataFrame(Survey['Satisfaction'].value_counts(normalize=True) * 100).reset_index()
Competency = pd.DataFrame(Survey['Competency'].value_counts(normalize=True) * 100).reset_index()
TeamWork = pd.DataFrame(Survey['TeamWork'].value_counts(normalize=True) * 100).reset_index()
TechnicalSkills = pd.DataFrame(Survey['TechnicalSkills'].value_counts(normalize=True) * 100).reset_index()
clearRoles = pd.DataFrame(Survey['clearRoles'].value_counts(normalize=True) * 100).reset_index()
Collaboration = pd.DataFrame(Survey['Collaboration'].value_counts(normalize=True) * 100).reset_index()
Crossfunctional = pd.DataFrame(Survey['Crossfunctional'].value_counts(normalize=True) * 100).reset_index()
RespectUniqueness = pd.DataFrame(Survey['RespectUniqueness'].value_counts(normalize=True) * 100).reset_index()
PriorityObjectives = pd.DataFrame(Survey['PriorityObjectives'].value_counts(normalize=True) * 100).reset_index()
ProctedPolicies = pd.DataFrame(Survey['ProctedPolicies'].value_counts(normalize=True) * 100).reset_index()
FactDrivenDecisions = pd.DataFrame(Survey['FactDrivenDecisions'].value_counts(normalize=True) * 100).reset_index()
AvailableInfo = pd.DataFrame(Survey['AvailableInfo'].value_counts(normalize=True) * 100).reset_index()
CoreValue = pd.DataFrame(Survey['CoreValue'].value_counts(normalize=True) * 100).reset_index()
CommunicationDepartment = pd.DataFrame(
    Survey['CommunicationDepartment'].value_counts(normalize=True) * 100).reset_index()
CommunicationManagers = pd.DataFrame(Survey['CommunicationManagers'].value_counts(normalize=True) * 100).reset_index()
Encourage = pd.DataFrame(Survey['Encourage'].value_counts(normalize=True) * 100).reset_index()
FreedomExpress = pd.DataFrame(Survey['FreedomExpress'].value_counts(normalize=True) * 100).reset_index()
DepartmentValues = pd.DataFrame(Survey['DepartmentValues'].value_counts(normalize=True) * 100).reset_index()
fig1 = px.pie(Adaptability, values='Adaptability', names='index', title='Adaptibility ')
fig2 = px.pie(No_pressure, values='No_pressure', names='index', title='No_pressure ')
fig3 = px.pie(Awareness, values='Awareness', names='index', title='Awareness ')
fig4 = px.pie(Influence, values='Influence', names='index', title='Influence ')
fig5 = px.pie(Importance, values='Importance', names='index', title='Importance ')
fig6 = px.pie(DefinedGoals, values='DefinedGoals', names='index', title='DefinedGoals ')
fig7 = px.pie(ReachGoal, values='ReachGoal', names='index', title='ReachGoal ')
fig8 = px.pie(Rewards, values='Rewards', names='index', title='Rewards ')
fig9 = px.pie(ParticiptionGoals, values='ParticiptionGoals', names='index', title='ParticiptionGoals ')
fig10 = px.pie(HarmonyGoals, values='HarmonyGoals', names='index', title='HarmonyGoals ')
fig11 = px.pie(CustomerValue, values='CustomerValue', names='index', title='CustomerValue ')
fig12 = px.pie(CustomerRetension, values='CustomerRetension', names='index', title='CustomerRetension ')
fig13 = px.pie(CustomerExperience, values='CustomerExperience', names='index', title='CustomerExperience ')
fig14 = px.pie(ExcellentReward, values='ExcellentReward', names='index', title='ExcellentReward ')
fig15 = px.pie(Satisfaction, values='Satisfaction', names='index', title='Satisfaction ')
fig16 = px.pie(Competency, values='Competency', names='index', title='Competency ')
fig17 = px.pie(TeamWork, values='TeamWork', names='index', title='TeamWork ')
fig18 = px.pie(TechnicalSkills, values='TechnicalSkills', names='index', title='TechnicalSkills ')
fig19 = px.pie(clearRoles, values='clearRoles', names='index', title='clearRoles ')
fig20 = px.pie(Collaboration, values='Collaboration', names='index', title='Collaboration ')
fig21 = px.pie(Crossfunctional, values='Crossfunctional', names='index', title='Crossfunctional ')
fig22 = px.pie(RespectUniqueness, values='RespectUniqueness', names='index', title='RespectUniqueness ')
fig23 = px.pie(PriorityObjectives, values='PriorityObjectives', names='index', title='PriorityObjectives ')
fig24 = px.pie(ProctedPolicies, values='ProctedPolicies', names='index', title='ProctedPolicies ')
fig25 = px.pie(FactDrivenDecisions, values='FactDrivenDecisions', names='index', title='FactDrivenDecisions ')
fig26 = px.pie(AvailableInfo, values='AvailableInfo', names='index', title='AvailableInfo ')
fig27 = px.pie(CoreValue, values='CoreValue', names='index', title='CoreValue ')
fig28 = px.pie(CommunicationDepartment, values='CommunicationDepartment', names='index',
               title='CommunicationDepartment ')
fig29 = px.pie(CommunicationManagers, values='CommunicationManagers', names='index', title='CommunicationManagers ')
fig30 = px.pie(Encourage, values='Encourage', names='index', title='Encourage ')
fig31 = px.pie(FreedomExpress, values='FreedomExpress', names='index', title='FreedomExpress ')
fig32 = px.pie(DepartmentValues, values='DepartmentValues', names='index', title='DepartmentValues ')
fig33 = px.pie(Awareness, values='Awareness', names='index', title='Awareness ')
fig34 = px.pie(Influence, values='Influence', names='index', title='Influence ')
fig35 = px.pie(Importance, values='Importance', names='index', title='Importance ')
fig36 = px.pie(DefinedGoals, values='DefinedGoals', names='index', title='DefinedGoals ')
fig1 = dbc.Col(dcc.Graph(figure=fig1))
fig2 = dbc.Col(dcc.Graph(figure=fig2))
fig2 = dbc.Col(dcc.Graph(figure=fig3))
fig4 = dbc.Col(dcc.Graph(figure=fig4))
fig5 = dbc.Col(dcc.Graph(figure=fig5))
fig6 = dbc.Col(dcc.Graph(figure=fig6))
fig7 = dbc.Col(dcc.Graph(figure=fig7))
fig8 = dbc.Col(dcc.Graph(figure=fig8))
fig9 = dbc.Col(dcc.Graph(figure=fig9))
fig10 = dbc.Col(dcc.Graph(figure=fig10))
fig11 = dbc.Col(dcc.Graph(figure=fig11))
fig12 = dbc.Col(dcc.Graph(figure=fig12))
fig12 = dbc.Col(dcc.Graph(figure=fig13))
fig14 = dbc.Col(dcc.Graph(figure=fig14))
fig15 = dbc.Col(dcc.Graph(figure=fig15))
fig16 = dbc.Col(dcc.Graph(figure=fig16))
fig17 = dbc.Col(dcc.Graph(figure=fig17))
fig18 = dbc.Col(dcc.Graph(figure=fig18))
fig19 = dbc.Col(dcc.Graph(figure=fig19))
fig20 = dbc.Col(dcc.Graph(figure=fig20))
fig21 = dbc.Col(dcc.Graph(figure=fig21))
fig22 = dbc.Col(dcc.Graph(figure=fig22))
fig23 = dbc.Col(dcc.Graph(figure=fig23))
fig24 = dbc.Col(dcc.Graph(figure=fig24))
fig25 = dbc.Col(dcc.Graph(figure=fig25))
fig26 = dbc.Col(dcc.Graph(figure=fig26))
fig27 = dbc.Col(dcc.Graph(figure=fig27))
fig28 = dbc.Col(dcc.Graph(figure=fig28))
fig29 = dbc.Col(dcc.Graph(figure=fig29))
fig30 = dbc.Col(dcc.Graph(figure=fig30))
fig31 = dbc.Col(dcc.Graph(figure=fig31))
fig32 = dbc.Col(dcc.Graph(figure=fig32))
fig33 = dbc.Col(dcc.Graph(figure=fig33))
fig34 = dbc.Col(dcc.Graph(figure=fig34))
fig35 = dbc.Col(dcc.Graph(figure=fig35))
fig36 = dbc.Col(dcc.Graph(figure=fig36))
row1 = dbc.Row([fig1, fig2, fig3])
row2 = dbc.Row([fig4, fig5, fig6])
row3 = dbc.Row([fig7, fig8, fig9])
row4 = dbc.Row([fig10, fig11, fig12])
row5 = dbc.Row([fig13, fig14, fig15])
row6 = dbc.Row([fig16, fig17, fig18])
row7 = dbc.Row([fig19, fig20, fig21])
row8 = dbc.Row([fig22, fig23, fig23])
row9 = dbc.Row([fig25, fig26, fig27])
row10 = dbc.Row([fig28, fig29, fig30])
row11 = dbc.Row([fig31, fig32, fig33])
row12 = dbc.Row([fig34, fig35, fig36])
app.layout = dbc.Container([title, row1, row2, row3, row4, row5, row6, row7, row8, row9, row10, row11, row12])
app.run_server(port=4090)
server = app.server
